/* Generated By:JavaCC: Do not edit this line. simplejavaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface simplejavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 10;
  /** RegularExpression Id. */
  int DO = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int FALSE = 13;
  /** RegularExpression Id. */
  int FOR = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int THEN = 16;
  /** RegularExpression Id. */
  int TRUE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int NEW = 20;
  /** RegularExpression Id. */
  int INT = 21;
  /** RegularExpression Id. */
  int BOOLEAN = 22;
  /** RegularExpression Id. */
  int VOID = 23;
  /** RegularExpression Id. */
  int SINGLEQUOTES = 24;
  /** RegularExpression Id. */
  int DOUBLEQUOTES = 25;
  /** RegularExpression Id. */
  int PLUS = 26;
  /** RegularExpression Id. */
  int MINUS = 27;
  /** RegularExpression Id. */
  int MULTIPLY = 28;
  /** RegularExpression Id. */
  int DIVIDE = 29;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 30;
  /** RegularExpression Id. */
  int SEMICOLON = 31;
  /** RegularExpression Id. */
  int LPAREN = 32;
  /** RegularExpression Id. */
  int RPAREN = 33;
  /** RegularExpression Id. */
  int LBRACKET = 34;
  /** RegularExpression Id. */
  int RBRACKET = 35;
  /** RegularExpression Id. */
  int LBRACE = 36;
  /** RegularExpression Id. */
  int RBRACE = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int COMMA = 39;
  /** RegularExpression Id. */
  int ASSIGN = 40;
  /** RegularExpression Id. */
  int EQUAL = 41;
  /** RegularExpression Id. */
  int NEQUAL = 42;
  /** RegularExpression Id. */
  int LESS = 43;
  /** RegularExpression Id. */
  int GREATER = 44;
  /** RegularExpression Id. */
  int LESSE = 45;
  /** RegularExpression Id. */
  int GREATERE = 46;
  /** RegularExpression Id. */
  int AND = 47;
  /** RegularExpression Id. */
  int OR = 48;
  /** RegularExpression Id. */
  int NOT = 49;
  /** RegularExpression Id. */
  int QUESTIONMARK = 50;
  /** RegularExpression Id. */
  int ID = 51;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"class\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"for\"",
    "\"if\"",
    "\"then\"",
    "\"true\"",
    "\"while\"",
    "\"return\"",
    "\"new\"",
    "\"int\"",
    "\"boolean\"",
    "\"void\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<INTEGER_LITERAL>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\".\"",
    "\",\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"?\"",
    "<ID>",
  };

}
